{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = \"\";\n    this.password = \"\";\n    this.user = null;\n    this.errorMessage = \"\";\n  }\n  login() {\n    if (this.username === \"admin\" && this.password === \"123456\") {\n      this.router.navigate([\"/home\"]);\n      localStorage.setItem(\"login\", \"true\");\n    } else {\n      this.errorMessage = \"Invalid credentials\";\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\", \"shadow\"], [1, \"card-body\"], [1, \"card-title\", \"text-center\", \"mb-4\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger mt-2\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-2\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n        i0.ɵɵtext(6, \"Admin Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n        i0.ɵɵtext(18, \" Login \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","LoginComponent","constructor","router","username","password","user","login","navigate","localStorage","setItem","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_7_listener","LoginComponent_Template_input_ngModelChange_11_listener","$event","LoginComponent_Template_input_ngModelChange_15_listener","ɵɵtemplate","LoginComponent_div_19_Template","ɵɵproperty"],"sources":["/Users/rugvedraikwar/Desktop/helpin_plan/froentend/helpingPlan/src/app/login/login.component.ts","/Users/rugvedraikwar/Desktop/helpin_plan/froentend/helpingPlan/src/app/login/login.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent {\n  username: string = \"\";\n  password: string = \"\";\n  user: any = null;\n  errorMessage: string = \"\";\n\n  constructor(private router: Router) {}\n\n  login() {\n    if (this.username === \"admin\" && this.password === \"123456\") {\n      this.router.navigate([\"/home\"]);\n      localStorage.setItem(\"login\", \"true\");\n    } else {\n      this.errorMessage = \"Invalid credentials\";\n    }\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-6\">\n            <div class=\"card shadow\">\n                <div class=\"card-body\">\n                    <h4 class=\"card-title text-center mb-4\">Admin Login</h4>\n                    <form (ngSubmit)=\"login()\">\n                        <div class=\"mb-3\">\n                            <label for=\"username\" class=\"form-label\"\n                                >Username</label\n                            >\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"username\"\n                                [(ngModel)]=\"username\"\n                                name=\"username\"\n                                required\n                            />\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"password\" class=\"form-label\"\n                                >Password</label\n                            >\n                            <input\n                                type=\"password\"\n                                class=\"form-control\"\n                                id=\"password\"\n                                [(ngModel)]=\"password\"\n                                name=\"password\"\n                                required\n                            />\n                        </div>\n                        <div class=\"d-grid gap-2\">\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                                Login\n                            </button>\n                        </div>\n                    </form>\n                    <div *ngIf=\"errorMessage\" class=\"alert alert-danger mt-2\">\n                        {{ errorMessage }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":";;;;;;ICuCoBA,EAAA,CAAAC,cAAA,cAA0D;IACtDD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADFH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,YAAA,MACJ;;;ADjCpB,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAL1B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,IAAI,GAAQ,IAAI;IAChB,KAAAN,YAAY,GAAW,EAAE;EAEY;EAErCO,KAAKA,CAAA;IACH,IAAI,IAAI,CAACH,QAAQ,KAAK,OAAO,IAAI,IAAI,CAACC,QAAQ,KAAK,QAAQ,EAAE;MAC3D,IAAI,CAACF,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;KACtC,MAAM;MACL,IAAI,CAACV,YAAY,GAAG,qBAAqB;;EAE7C;EAAC,QAAAW,CAAA,G;qBAfUV,cAAc,EAAAR,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdd,cAAc;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3B7B,EAAA,CAAAC,cAAA,aAA4B;QAKgCD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACxDH,EAAA,CAAAC,cAAA,cAA2B;QAArBD,EAAA,CAAA+B,UAAA,sBAAAC,iDAAA;UAAA,OAAYF,GAAA,CAAAhB,KAAA,EAAO;QAAA,EAAC;QACtBd,EAAA,CAAAC,cAAA,aAAkB;QAETD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EACZ;QACDH,EAAA,CAAAC,cAAA,gBAOE;QAHED,EAAA,CAAA+B,UAAA,2BAAAE,wDAAAC,MAAA;UAAA,OAAAJ,GAAA,CAAAnB,QAAA,GAAAuB,MAAA;QAAA,EAAsB;QAJ1BlC,EAAA,CAAAG,YAAA,EAOE;QAENH,EAAA,CAAAC,cAAA,cAAkB;QAETD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EACZ;QACDH,EAAA,CAAAC,cAAA,iBAOE;QAHED,EAAA,CAAA+B,UAAA,2BAAAI,wDAAAD,MAAA;UAAA,OAAAJ,GAAA,CAAAlB,QAAA,GAAAsB,MAAA;QAAA,EAAsB;QAJ1BlC,EAAA,CAAAG,YAAA,EAOE;QAENH,EAAA,CAAAC,cAAA,eAA0B;QAElBD,EAAA,CAAAE,MAAA,eACJ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAGjBH,EAAA,CAAAoC,UAAA,KAAAC,8BAAA,kBAEM;QACVrC,EAAA,CAAAG,YAAA,EAAM;;;QA3BUH,EAAA,CAAAI,SAAA,IAAsB;QAAtBJ,EAAA,CAAAsC,UAAA,YAAAR,GAAA,CAAAnB,QAAA,CAAsB;QAatBX,EAAA,CAAAI,SAAA,GAAsB;QAAtBJ,EAAA,CAAAsC,UAAA,YAAAR,GAAA,CAAAlB,QAAA,CAAsB;QAW5BZ,EAAA,CAAAI,SAAA,GAAkB;QAAlBJ,EAAA,CAAAsC,UAAA,SAAAR,GAAA,CAAAvB,YAAA,CAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}