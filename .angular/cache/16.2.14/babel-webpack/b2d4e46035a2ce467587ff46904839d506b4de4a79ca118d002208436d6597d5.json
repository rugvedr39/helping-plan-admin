{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  // private apiUrl = \"https://helpingplan.online/api/\";\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:3000/api/\";\n  }\n  getUsers(page, limit, search) {\n    const params = {\n      page: page.toString(),\n      limit: limit.toString(),\n      search\n    };\n    return this.http.get(this.apiUrl + \"admin/users\", {\n      params\n    });\n  }\n  genrateEpin(body) {\n    return this.http.post(this.apiUrl + \"epin/createEpin\", body);\n  }\n  updateUser(user) {\n    const url = `${this.apiUrl}/users/${user.id}`;\n    return this.http.put(url, user);\n  }\n  getCounts() {\n    return this.http.get(this.apiUrl + \"admin/usersCount\");\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","apiUrl","getUsers","page","limit","search","params","toString","get","genrateEpin","body","post","updateUser","user","url","id","put","getCounts","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/rugvedraikwar/Desktop/helpin_plan/froentend/helpingPlan/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private apiUrl = \"http://localhost:3000/api/\";\n  // private apiUrl = \"https://helpingplan.online/api/\";\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(page: number, limit: number, search: string): Observable<any> {\n    const params = {\n      page: page.toString(),\n      limit: limit.toString(),\n      search,\n    };\n\n    return this.http.get<any>(this.apiUrl + \"admin/users\", { params });\n  }\n\n  genrateEpin(body: any) {\n    return this.http.post(this.apiUrl + \"epin/createEpin\", body);\n  }\n  updateUser(user: any): Observable<any> {\n    const url = `${this.apiUrl}/users/${user.id}`;\n    return this.http.put(url, user);\n  }\n  getCounts() {\n    return this.http.get(this.apiUrl + \"admin/usersCount\");\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtB;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,4BAA4B;EAGN;EAEvCC,QAAQA,CAACC,IAAY,EAAEC,KAAa,EAAEC,MAAc;IAClD,MAAMC,MAAM,GAAG;MACbH,IAAI,EAAEA,IAAI,CAACI,QAAQ,EAAE;MACrBH,KAAK,EAAEA,KAAK,CAACG,QAAQ,EAAE;MACvBF;KACD;IAED,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACP,MAAM,GAAG,aAAa,EAAE;MAAEK;IAAM,CAAE,CAAC;EACpE;EAEAG,WAAWA,CAACC,IAAS;IACnB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACV,MAAM,GAAG,iBAAiB,EAAES,IAAI,CAAC;EAC9D;EACAE,UAAUA,CAACC,IAAS;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACb,MAAM,UAAUY,IAAI,CAACE,EAAE,EAAE;IAC7C,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAACF,GAAG,EAAED,IAAI,CAAC;EACjC;EACAI,SAASA,CAAA;IACP,OAAO,IAAI,CAACjB,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACP,MAAM,GAAG,kBAAkB,CAAC;EACxD;EAAC,QAAAiB,CAAA,G;qBAzBUpB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}